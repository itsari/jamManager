<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>jamManager - <%= song.name %></title>
    <link rel="stylesheet" href="/css/style.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vexflow/1.2.83/vexflow-min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vexchords@1.2.0/dist/vexchords.dev.min.js"></script>
    <style>
      .chord-tooltip {
        display: none;
        position: absolute;
        background-color: white;
        border: 1px solid #ccc;
        padding: 5px;
        z-index: 10;
      }
      .font-size-control,
      .scroll-controls,
      .transpose-controls {
        margin: 10px 0;
      }
      .lyrics,
      .chords {
        font-size: 16px; /* Default font size */
      }
      .scroll-container {
        height: 400px; /* Set a height to make the div scrollable */
        overflow-y: auto; /* Enable vertical scrolling */
        border: 1px solid #ccc;
        padding: 10px;
      }
    </style>
  </head>
  <body>
    <%- include('header') %>
    <h2><%= song.name %> by <%= song.artist %></h2>
    <p><strong>Album:</strong> <%= song.album %></p>
    <p><strong>Tempo:</strong> <%= song.tempo %></p>

    <div class="font-size-control">
      <label for="font-size-range">Font Size:</label>
      <input type="range" id="font-size-range" min="10" max="30" value="16" />
    </div>

    <div class="scroll-controls">
      <button onclick="startScroll(1)">X1</button>
      <button onclick="startScroll(2)">X2</button>
      <button onclick="startScroll(3)">X3</button>
      <button onclick="startScroll(4)">X4</button>
      <button onclick="startScroll(5)">X5</button>
      <button onclick="stopScroll()">Stop</button>
    </div>

    <div class="transpose-controls">
      <button onclick="transposeChords(1)">+</button>
      <button onclick="transposeChords(-1)">-</button>
    </div>

    <h3>Lyrics and Chords</h3>
    <div class="scroll-container" id="scroll-container">
      <% parsedLyrics.forEach(line => { %>
      <div>
        <div class="chords">
          <% line.chords.forEach(chord => { %>
          <span class="chord" data-chord="<%= chord %>"><%= chord %></span>
          <% }) %>
        </div>
        <div class="lyrics">
          <pre><%= line.lyrics %></pre>
        </div>
      </div>
      <% }) %>
    </div>
    <div class="youtube-play">
      <iframe
        width="560"
        height="315"
        src="https://www.youtube.com/embed/<%= song.youtube_link %>"
        title="YouTube video player"
        frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen
      ></iframe>
    </div>
    <%- include('footer') %>
    <script>
      document
        .getElementById("font-size-range")
        .addEventListener("input", function () {
          var newSize = this.value + "px";
          document
            .querySelectorAll(".lyrics, .chords")
            .forEach(function (element) {
              element.style.fontSize = newSize;
            });
        });

      let scrollInterval;

      function startScroll(speed) {
        stopScroll(); // Stop any existing scrolling

        const speedMapping = {
          1: 100,
          2: 80,
          3: 60,
          4: 40,
          5: 20,
        };

        const scrollSpeed = speedMapping[speed];
        const scrollContainer = document.getElementById("scroll-container");
        scrollInterval = setInterval(() => {
          scrollContainer.scrollBy(0, 1);
        }, scrollSpeed);
      }

      function stopScroll() {
        clearInterval(scrollInterval);
      }

      const chordMap = {
        C: 0,
        "C#": 1,
        Db: 1,
        D: 2,
        "D#": 3,
        Eb: 3,
        E: 4,
        F: 5,
        "F#": 6,
        Gb: 6,
        G: 7,
        "G#": 8,
        Ab: 8,
        A: 9,
        "A#": 10,
        Bb: 10,
        B: 11,
      };
      const reverseChordMap = {
        0: "C",
        1: "C#",
        2: "D",
        3: "D#",
        4: "E",
        5: "F",
        6: "F#",
        7: "G",
        8: "G#",
        9: "A",
        10: "A#",
        11: "B",
      };

      function transposeChord(chord, semitones) {
        const chordParts = chord.match(/^([A-G][b#]?)(.*)$/);
        if (!chordParts) return chord;
        const root = chordParts[1];
        const suffix = chordParts[2];
        const rootValue = chordMap[root];
        if (rootValue === undefined) return chord;
        let newRootValue = (rootValue + semitones + 12) % 12;
        let newRoot = reverseChordMap[newRootValue];
        return newRoot + suffix;
      }

      function transposeChords(semitones) {
        document.querySelectorAll(".chord").forEach(function (element) {
          let originalChord = element.getAttribute("data-chord");
          let transposedChord = transposeChord(originalChord, semitones);
          element.innerText = transposedChord;
          element.setAttribute("data-chord", transposedChord);
        });
      }
    </script>
  </body>
</html>
